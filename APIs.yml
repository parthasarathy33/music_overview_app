openapi: 3.0.0
info:
  title: Music Collections API
  version: 2.0.0
  description: Unified API for music collections management

servers:
  - url: http://localhost:3001
    description: Local development server
  - url: https://api.musiccollection.com/v1
    description: Production server

paths:
  /collections:
    get:
      summary: Get all music collections
      description: Retrieve paginated list of music collections with essential details
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: A paginated list of music collections
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Collection'
                  total:
                    type: integer

  /collections/{collectionId}:
    get:
      summary: Get collection details
      description: Retrieve complete details for a specific collection
      parameters:
        - name: collectionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detailed collection information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionDetails'
        '404':
          description: Collection not found

components:
  schemas:
    Collection:
      type: object
      required:
        - id
        - name
        - artist
        - type
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          example: "EPIC: The Troy Saga (Official Concept Album)"
          pattern: '^[a-zA-Z0-9(): ]+$'  # Allow proper collection names
        artist:
          type: string
          example: "Jorge Rivera-Herrans"
          minLength: 3
        type:
          type: string
          enum: [Album, EP, Single]
          example: "EP"
        songCount:
          description: Number of songs in the collection
          minimum: 1  # Require at least 1 song
        durationInSeconds:
          description: Total duration in seconds
          minimum: 30
          maximum: 86400  # 24 hour max duration
        sizeInBytes:
          description: Total size in bytes
          minimum: 1024
          maximum: 1073741824  # 1GB max size
        releasedOn:
          description: ISO 8601 release timestamp
          example: "2024-09-03T14:35:00Z"

    CollectionDetails:
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            songs:
              type: array
              items:
                $ref: '#/components/schemas/Song'
              minItems: 1

    Song:
      type: object
      required:
        - title
        - durationInSeconds
      properties:
        title:
          type: string
          example: "The Battle of Troy"
        durationInSeconds:
          minimum: 30
          maximum: 7200
        sizeInBytes:
          minimum: 102400  # 100KB
        performers:
          type: array
          items:
            type: string
          minItems: 1
          example: ["Jorge Rivera-Herrans"]